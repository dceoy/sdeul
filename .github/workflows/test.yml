---
name: Unit and CLI tests
on:
  workflow_call:
    inputs:
      uv-version:
        required: false
        type: string
        description: Version of uv to use (applicable only if uv.lock is present)
        default: latest
      bats-version:
        required: false
        type: string
        description: Bats version to use
        default: latest
      runs-on:
        required: false
        type: string
        description: Runner to use
        default: macos-latest
    secrets:
      GROQ_API_KEY:
        required: true
        description: Groq API key
      CEREBRAS_API_KEY:
        required: true
        description: Cerebras API key
  workflow_dispatch:
    inputs:
      uv-version:
        required: false
        type: string
        description: Version of uv to use (applicable only if uv.lock is present)
        default: latest
      bats-version:
        required: false
        type: string
        description: Bats version to use
        default: latest
      groq-model:
        required: false
        type: choice
        options:
          - null
          - openai/gpt-oss-120b
          - openai/gpt-oss-20b
          - meta-llama/llama-4-maverick-17b-128e-instruct
          - meta-llama/llama-4-scout-17b-16e-instruct
        description: Groq model to use
        default: openai/gpt-oss-120b
      cerebras-model:
        required: false
        type: choice
        options:
          - null
          - gpt-oss-120b
          - llama-4-maverick-17b-128e-instruct
          - llama-4-scout-17b-16e-instruct
        description: Cerebras model to use
        default: gpt-oss-120b
      runs-on:
        required: false
        type: string
        description: Runner to use
        default: macos-latest
defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: .
jobs:
  unit-tests:
    uses: dceoy/gh-actions-for-devops/.github/workflows/python-package-test.yml@main
    with:
      package-path: .
      uv-version: ${{ inputs.uv-version }}
      runs-on: ${{ inputs.runs-on }}
  cli-tests:
    runs-on: ${{ inputs.runs-on }}
    env:
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - name: Setup Bats and bats libs
        uses: bats-core/bats-action@42fcc8700f773c075a16a90eb11674c0318ad507  # 3.0.1
        with:
          bats-version: ${{ inputs.bats-version || 'latest' }}
      - name: Set up uv
        uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6  # v6.6.1
        with:
          version: ${{ inputs.uv-version || 'latest' }}
      - name: Install dependencies
        run: |
          uv sync
      - name: Test CLI
        run: |
          bats --verbose-run ./test/cli/test_cli.bats
      - name: Test API
        run: |
          bats --verbose-run ./test/cli/test_api.bats
      - name: Test a command using Groq
        if: inputs.groq-model != null
        env:
          GROQ_MODEL: ${{ inputs.groq-model }}
        run: |
          bats --verbose-run ./test/cli/test_groq.bats
      - name: Test a command using Cerebras
        if: inputs.cerebras-model != null
        env:
          CEREBRAS_MODEL: ${{ inputs.cerebras-model }}
        run: |
          bats --verbose-run ./test/cli/test_cerebras.bats
