---
name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  workflow_dispatch:
    inputs:
      workflow:
        required: true
        type: choice
        options:
          - lint-and-test
          - build-and-push
          - release
        description: Choose the workflow to run
        default: lint-and-test
jobs:
  python-lint-and-scan:
    if: >
      github.event_name == 'push'
      || (github.event_name == 'pull_request' && github.event.action != 'ready_for_review')
      || (github.event_name == 'workflow_dispatch' && inputs.workflow == 'lint-and-test')
    uses: dceoy/gh-actions-for-devops/.github/workflows/python-package-lint-and-scan.yml@main
    with:
      package-path: .
      python-version: 3.x
  python-test:
    if: >
      github.event_name == 'push'
      || (github.event_name == 'pull_request' && github.event.action != 'ready_for_review')
      || (github.event_name == 'workflow_dispatch' && inputs.workflow == 'lint-and-test')
    uses: ./.github/workflows/test.yml
    secrets:
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  github-codeql-analysis:
    if: >
      github.event_name == 'push'
      || (github.event_name == 'workflow_dispatch' && inputs.workflow == 'lint-and-test')
    uses: dceoy/gh-actions-for-devops/.github/workflows/github-codeql-analysis.yml@main
    permissions:
      actions: read
      contents: read
      security-events: write
    with:
      language: >
        ["python"]
  dependabot-auto-merge:
    if: >
      github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    needs:
      - python-lint-and-scan
      - python-test
    uses: dceoy/gh-actions-for-devops/.github/workflows/dependabot-auto-merge.yml@main
    permissions:
      contents: write
      pull-requests: write
    with:
      unconditional: false
  docker-build-and-push:
    if: >
      github.event_name == 'push'
      || (github.event_name == 'workflow_dispatch' && inputs.workflow == 'build-and-push')
    uses: dceoy/gh-actions-for-devops/.github/workflows/docker-build-and-push.yml@main
    permissions:
      contents: write
      packages: write
    with:
      registry: docker.io
      registry-user: ${{ github.actor }}
      image-name: ${{ github.repository }}
      platforms: linux/amd64,linux/arm64
      context: .
      file: ./Dockerfile
      push: true
      image-artifact-name: docker-image
    secrets:
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  python-package-release:
    if: >
      github.event_name == 'push'
      || (
        github.event_name == 'workflow_dispatch'
        && (inputs.workflow == 'release' || inputs.workflow == 'lint-and-test')
      )
    uses: dceoy/gh-actions-for-devops/.github/workflows/python-package-release-on-pypi-and-github.yml@main
    permissions:
      contents: write
      id-token: write
    with:
      package-path: .
      create-releases: ${{ github.event_name == 'workflow_dispatch' && inputs.workflow == 'release' }}
      python-version: 3.x
    secrets:
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  pr-agent:
    if: >
      github.event_name == 'pull_request'
      && github.actor != 'dependabot[bot]'
      && github.event.action != 'synchronize'
    uses: dceoy/gh-actions-for-devops/.github/workflows/pr-agent.yml@main
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    secrets:
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
