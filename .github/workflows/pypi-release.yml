---
name: Release on PyPI
on:
  workflow_dispatch:
jobs:
  build:
    name: Build the Python üêç distribution üì¶
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install pypa/build
        run: |
          python3 -m pip install --upgrade --no-cache-dir build
      - name: Read the project name
        run: |
          cat << EOF | python3  >> $GITHUB_OUTPUT
          import tomllib
          with open('pyproject.toml', 'rb') as f:
              name = tomllib.load(f)['project']['name']
          with open('${GITHUB_OUTPUT}', 'a') as f:
              print(f'PROJECT_NAME={name}', file=f)
          EOF
      - name: Build a binary wheel and a source tarball
        run: |
          python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
  github-release:
    name: Sign the Python üêç distribution üì¶ with Sigstore and upload them to GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v1.2.3
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create '${{ github.ref_name }}' \
            --repo '${{ github.repository }}' --notes ''
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: |
          gh release upload '${{ github.ref_name }}' dist/** \
            --repo '${{ github.repository }}'
  publish-to-pypi:
    name: Publish the Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - github-release
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ needs.build.outputs.PROJECT_NAME }}
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
#   publish-to-testpypi:
#     name: Publish the Python üêç distribution üì¶ to TestPyPI
#     needs:
#       - build
#     runs-on: ubuntu-latest
#     environment:
#       name: testpypi
#       url: https://test.pypi.org/p/<package-name>
#     permissions:
#       id-token: write  # IMPORTANT: mandatory for trusted publishing
#     steps:
#       - name: Download all the dists
#         uses: actions/download-artifact@v3
#         with:
#           name: python-package-distributions
#           path: dist/
#       - name: Publish distribution üì¶ to TestPyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           repository-url: https://test.pypi.org/legacy/
